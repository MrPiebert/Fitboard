<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Exercise List</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
            cursor: pointer; /* Add cursor pointer to indicate clickable */
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <h1>Exercise List</h1>
    <div id="exercise-list"></div>

    <script>
        // JavaScript code to dynamically generate the exercise table
        const exerciseList = [
        {'exercise': 'Deadlift',    'muscle': 'glutes', 'category': 'Main'},
    {'exercise': 'PushUp',      'muscle': 'core',   'category': 'Prehab'},
    {'exercise': 'A-skip',      'muscle': 'core',   'category': 'Main'},
    {'exercise': 'Bench Press', 'muscle': 'chest',  'category': 'Main'},
    {'exercise': 'Plank',       'muscle': 'core',   'category': 'Prehab'},
    {'exercise': 'Squats',      'muscle': 'quads',  'category': 'Main'},
    {'exercise': 'Pull-up',     'muscle': 'back',   'category': 'Main'},
    {'exercise': 'Lunges',      'muscle': 'hamstrings', 'category': 'Main'},
    {'exercise': 'Side Plank',  'muscle': 'obliques',   'category': 'Prehab'},
    {'exercise': 'Cycling',     'muscle': 'cardio', 'category': 'Warmup'}
        ];

        // Object to track the current sort order for each column
        const sortOrder = {
            'exercise': 'asc',
            'muscle': 'asc',
            'category': 'asc'
        };

        // Function to generate HTML content for the exercise table
        function generateExerciseTable(exercises) {
            let html = '<table>';
            // Table header
            html += '<tr><th onclick="sortTable(\'exercise\')">Exercise</th><th onclick="sortTable(\'muscle\')">Muscle</th><th onclick="sortTable(\'category\')">Category</th></tr>';
            // Table rows
            exercises.forEach(exercise => {
                html += `<tr><td>${exercise['exercise']}</td><td>${exercise['muscle']}</td><td>${exercise['category']}</td></tr>`;
            });
            html += '</table>';
            return html;
        }

        // Function to sort the table by column
        function sortTable(column) {
            if (sortOrder[column] === 'asc') {
                exerciseList.sort((a, b) => a[column].localeCompare(b[column]));
                sortOrder[column] = 'desc';
            } else {
                exerciseList.sort((a, b) => b[column].localeCompare(a[column]));
                sortOrder[column] = 'asc';
            }
            // Re-generate HTML content for the exercise table
            const exerciseTableHTML = generateExerciseTable(exerciseList);
            // Update the content in the exercise-list div
            document.getElementById('exercise-list').innerHTML = exerciseTableHTML;
        }

        // Initial generation of the exercise table
        const exerciseTableHTML = generateExerciseTable(exerciseList);
        document.getElementById('exercise-list').innerHTML = exerciseTableHTML;
    </script>
</body>
</html>
